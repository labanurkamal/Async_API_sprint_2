version: '3'
services:
  service:
    build: .
    ports:
    - "8000:8000"
    env_file:
      - .env
    depends_on:
      - theatre-db
      - elasticsearch

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - service
    ports:
      - "80:80"


  theatre-db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  elasticsearch:
    image: docker.io/elastic/elasticsearch:8.15.1
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      xpack.security.enabled: "false"
      USE_SSL: "false"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200/_cluster/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-storage:/data


volumes:
  static_volume:
  redis-storage:
  esdata:
